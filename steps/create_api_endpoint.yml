id: create_api_endpoint
learningObjectives: 
- Implement a new API endpoint
- Manipulate database using mongoose
hints:
- You can use model.deleteMany() function 
- Remember to validate whether the user who is attempting to delete items is the same user who uploaded them.
startFlow:
  do:
  - actionId: bot_message
    params:
      person: keen
      messages:
      - text: "Finally, I need you to add the endpoint '/items/deleteItems' to handle the selected items and remove them. This will allow us to process the requests and delete the items in one go. But before we do that, we need to make sure we're only deleting items that belong to the user who sent the request. We don't want anyone deleting someone else's stuff by mistake."
        delay: 2000
      - text: "So, you need to add a validation that checks if the seller ID property of each item matches the ID of the user who sent the request. Once we've confirmed that, we can safely delete the selected items"
        delay: 2000
      - text: "Open a PR when you're done."
        delay: 1000
githubActions:
  frontend:
    capabilities:
    - jest-puppeteer
    testFile: "items.test.js"
trigger:
  type: github_pr_lifecycle_status
  flowNode:
    switch: 
      key: "${eventType}"
      cases: 
        github_pr_opened:
          do: 
            - actionId: bot_message
              params:
                person: keen
                messages:
                - text: On that was fast, I'll review the changes right away.     
                  delay: 1000
        github_pr_workflow_complete_success:
          do:
            - actionId: bot_message
              params: 
                person: keen
                message:
                - text: "Nailed it! Excellent job @${user.githubuser}! You can now merge the PR."
                delay: 2000
            - actionId: github_pr_approve
              params:
                person: keen
                message: "Nailed it! Excellent job @${user.githubuser}! You can now merge the PR."
        github_pr_workflow_complete_failure:
          do:
            - actionId: bot_message
              params:
                person: keen
                messages:
                - text: "Make sure your fix passes all the checks, then try again please."
                delay: 3000
            - actionId: github_pr_reject
              params:
                person: keen
                message: "Looks like this code change didnâ€™t fix the problem. Can you take a second look?"
        github_pr_merged:
          do: 
            - actionId: finish_step
